% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataCollective.R
\docType{class}
\name{dataCollective-class}
\alias{dataCollective-class}
\alias{dataCollective}
\title{Class Definition for Storing jonesDatum objects with methods to access data, 
subest traces, append/remove files,}
\description{
Class Definition for Storing jonesDatum objects with methods to access data, 
subest traces, append/remove files,
}
\section{Fields}{

\describe{
\item{\code{files}}{Char vector containing full paths to data files (.xlsx)}

\item{\code{names}}{no Input. Contains names of files loaded}

\item{\code{data}}{no Input. Contains named list of jonesDatum objects}

\item{\code{nFiles}}{noInput. Contains the count of currently loaded}
}}

\section{Methods}{

\describe{
\item{\code{extractArea(dataNames)}}{Extracts data.frames of Area from supplied \code{dataNames}. 
Always returns named list.}

\item{\code{extractData(dataNames, type = c("adjusted", "standardized", "raw",
  "background", "corrected"), asList = FALSE)}}{Extracts matrix of data from supplied \code{dataNames}. 
Always returns named list. \cr
Argument, \code{asList}, set to \code{TRUE} will extract each dataFile's 
data as a list of lists rather than as a dataList object (default).}

\item{\code{extractDatum(dataName, copy = FALSE)}}{Gets the jonesDatum object for a single dataName. \cr
Use \code{copy = FALSE} for chaining (default). Set to \code{TRUE} 
if a copy is desired, otherwise changes to the output object will 
affect the original. In other words, setting to TRUE will mimic
R's copy-on-modify behavior.}

\item{\code{extractIDs(dataNames)}}{Extracts data.frames of Area from supplied \code{dataNames}. 
Always returns named list.}

\item{\code{extractROI(dataNames)}}{Extracts data.frames of ROIs from supplied \code{dataNames}. 
Always returns named list.}

\item{\code{getDetails(type = "confluence", asUnique = FALSE, ...)}}{Returns possible inputs for \code{type}. If \code{asUnique=TRUE} or data values as vector. \cr
Possible inputs for \code{type} are: \cr
\itemize{
  \item \code{SampleRate}: Recording rate in frames per second.
  \item \code{TreatmentStart}: Time of Treatment, if applicable.
  \item \code{nCells}: Number of cells in the dataset.
  \item \code{HasBackground}: Whether or not a background correction performed.
  \item \code{ExperimentDate}: Date of the original collection.
  \item \code{CellType}: What kind of cells are we dealing with.
  \item \code{PassageNumber}: The passage number given as P#.
  \item \code{MediaSupl}: What other factors were introduced into the media.
  \item \code{StarvedLength}: How long were the cells serum starved prior to collection.
  \item \code{confluence}: How conlfuent, 0-100 percent, were the cells at collection time.
  \item \code{checkConfluence}: Provide \code{prcnt} [0,100] in the \code{...} arg. Returns boolean.
  \item \code{primaryTreatment}: Get the primary treatment, either NA or ET1
  \item \code{secondaryTreatment}: Get teh secondary treatmetn, either NA or IL1b
  \item \code{endothelin}: Returns \code{TRUE} if ET1 was applied.
  \item \code{interleukin}: Returns \code{TRUE} if IL1b was applied.
}}

\item{\code{getMatches(confluence = NULL, endothelin = NULL, interleukin = NULL)}}{\code{getMatches} returns a vector of data file names matching provided criteria. 
Values left at default will not be checked, thus an empty call will get all
names. Acceptable values for input arguments are: \cr
\itemize{
  \item \code{confluence} Must be NULL or NUMERIC on [0,100]. Checking for percent confluence.
  \item \code{endothelin} Must be NULL or BOOLEAN. Checks for ET1 treatment only.
  \item \code{interleukin} Must be NULL or BOOLEAN. Checks for IL-1b treatment only.
}}

\item{\code{pop(first = FALSE)}}{Removes and returns last datum unless arg \code{first = TRUE}.}

\item{\code{push(newFiles, ...)}}{Appends newfiles that do not already exist}

\item{\code{save(pathName, objectName = "", ...)}}{Save the current object on the file in R external object format.}

\item{\code{size()}}{Get the size of the object in memory.}

\item{\code{subset(dataNames, inplace = FALSE)}}{Returns a copy, unless \code{inplace=TRUE} then data are dropped.}
}}

